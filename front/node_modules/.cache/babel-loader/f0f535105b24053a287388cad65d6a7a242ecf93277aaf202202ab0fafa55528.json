{"ast":null,"code":"var _jsxFileName = \"D:\\\\for cv\\\\Blog\\\\client\\\\src\\\\pages\\\\PostPage.js\",\n  _s = $RefreshSig$();\nimport { formatISO9075 } from 'date-fns';\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PostPage() {\n  _s();\n  const [postInfo, setPostInfo] = useState(null);\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    fetch(`http://localhost:2000/post/${id}`).then(response => {\n      response.json().then(postInfo => {\n        setPostInfo(postInfo);\n      });\n    });\n  }, [id]);\n  if (!postInfo) return '';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: postInfo.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"time\", {\n      children: formatISO9075(new Date(postInfo.createdAt))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"author\",\n      children: [\"by@ \", postInfo.author.username]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `http://localhost:2000/${postInfo.cover}`,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      dangerouslySetInnerHTML: {\n        __html: postInfo.content\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(PostPage, \"S7u3/m2ynFph0poP4feDI8MHEqU=\", false, function () {\n  return [useParams];\n});\n_c = PostPage;\nexport default PostPage;\nvar _c;\n$RefreshReg$(_c, \"PostPage\");","map":{"version":3,"names":["formatISO9075","React","useEffect","useState","useParams","jsxDEV","_jsxDEV","PostPage","_s","postInfo","setPostInfo","id","fetch","then","response","json","className","children","title","fileName","_jsxFileName","lineNumber","columnNumber","Date","createdAt","author","username","src","cover","alt","dangerouslySetInnerHTML","__html","content","_c","$RefreshReg$"],"sources":["D:/for cv/Blog/client/src/pages/PostPage.js"],"sourcesContent":["import {  formatISO9075 } from 'date-fns';\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\n\r\nfunction PostPage() {\r\n    const [postInfo, setPostInfo] = useState(null);\r\n    const  {id} = useParams();\r\n\r\n    useEffect(() => {\r\n        fetch(`http://localhost:2000/post/${id}`)\r\n        .then(response => {\r\n          response.json().then(postInfo => {\r\n           setPostInfo(postInfo);\r\n           \r\n          })\r\n        })\r\n    },[id])\r\n    if(!postInfo) return '';\r\n   \r\n  return (\r\n    <div className='post-page'>\r\n      <h1>{postInfo.title}</h1>\r\n      <time>{formatISO9075(new Date(postInfo.createdAt))}</time>\r\n      <div className='author'>\r\n        by@ {postInfo.author.username}\r\n      </div>\r\n        <div className='image'>\r\n          <img src={`http://localhost:2000/${postInfo.cover}`} alt=''></img>\r\n        </div>\r\n        \r\n        <div dangerouslySetInnerHTML={{__html:postInfo.content}} />\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PostPage"],"mappings":";;AAAA,SAAUA,aAAa,QAAQ,UAAU;AACzC,OAAOC,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE5C,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAO;IAACQ;EAAE,CAAC,GAAGP,SAAS,CAAC,CAAC;EAEzBF,SAAS,CAAC,MAAM;IACZU,KAAK,CAAE,8BAA6BD,EAAG,EAAC,CAAC,CACxCE,IAAI,CAACC,QAAQ,IAAI;MAChBA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAACF,IAAI,CAACJ,QAAQ,IAAI;QAChCC,WAAW,CAACD,QAAQ,CAAC;MAEtB,CAAC,CAAC;IACJ,CAAC,CAAC;EACN,CAAC,EAAC,CAACE,EAAE,CAAC,CAAC;EACP,IAAG,CAACF,QAAQ,EAAE,OAAO,EAAE;EAEzB,oBACEH,OAAA;IAAKU,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBX,OAAA;MAAAW,QAAA,EAAKR,QAAQ,CAACS;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACzBhB,OAAA;MAAAW,QAAA,EAAOjB,aAAa,CAAC,IAAIuB,IAAI,CAACd,QAAQ,CAACe,SAAS,CAAC;IAAC;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAC1DhB,OAAA;MAAKU,SAAS,EAAC,QAAQ;MAAAC,QAAA,GAAC,MAClB,EAACR,QAAQ,CAACgB,MAAM,CAACC,QAAQ;IAAA;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,eACJhB,OAAA;MAAKU,SAAS,EAAC,OAAO;MAAAC,QAAA,eACpBX,OAAA;QAAKqB,GAAG,EAAG,yBAAwBlB,QAAQ,CAACmB,KAAM,EAAE;QAACC,GAAG,EAAC;MAAE;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/D,CAAC,eAENhB,OAAA;MAAKwB,uBAAuB,EAAE;QAACC,MAAM,EAACtB,QAAQ,CAACuB;MAAO;IAAE;MAAAb,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAE1D,CAAC;AAEV;AAACd,EAAA,CA9BQD,QAAQ;EAAA,QAECH,SAAS;AAAA;AAAA6B,EAAA,GAFlB1B,QAAQ;AAgCjB,eAAeA,QAAQ;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}