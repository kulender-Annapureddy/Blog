{"ast":null,"code":"var _jsxFileName = \"D:\\\\for cv\\\\Blog\\\\client\\\\src\\\\pages\\\\RegisterPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RegisterPage() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const register = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch('http://localhost:2000/register', {\n        method: 'POST',\n        body: JSON.stringify({\n          username,\n          password\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (response.ok === false) {\n        alert(\"registration failed\");\n      } else {\n        alert(\"registration successfull\");\n      }\n      const data = await response.json();\n      console.log(\"response\", data);\n    } catch (error) {\n      console.log('registration failed', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"register\",\n    onSubmit: register,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"usename\",\n      value: username,\n      onChange: e => setUsername(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"password\",\n      value: password,\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(RegisterPage, \"wuQOK7xaXdVz4RMrZQhWbI751Oc=\");\n_c = RegisterPage;\nexport default RegisterPage;\nvar _c;\n$RefreshReg$(_c, \"RegisterPage\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","RegisterPage","_s","username","setUsername","password","setPassword","register","e","preventDefault","response","fetch","method","body","JSON","stringify","headers","ok","alert","data","json","console","log","error","className","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","_c","$RefreshReg$"],"sources":["D:/for cv/Blog/client/src/pages/RegisterPage.js"],"sourcesContent":["import React, { useState } from 'react'\r\n\r\n\r\nfunction RegisterPage() {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  \r\n  const register = async(e) => {\r\n    e.preventDefault();\r\n\r\n   try {\r\n    const response = await fetch('http://localhost:2000/register', {\r\n      method: 'POST',\r\n      body:JSON.stringify({username, password}),\r\n      headers:{'Content-Type' : 'application/json'},\r\n    })\r\n    if(response.ok === false) {\r\n      alert(\"registration failed\");\r\n    } else {\r\n      alert(\"registration successfull\");\r\n    }\r\n    const data =  await response.json();\r\n    console.log(\"response\", data);\r\n   } catch (error) {\r\n     console.log('registration failed', error);\r\n   }\r\n\r\n  }\r\n  \r\n  return (\r\n    <form className='register' onSubmit={register} >\r\n      <h1>Register</h1>\r\n    <input type='text' placeholder='usename' value={username} onChange={(e) => setUsername(e.target.value)}></input>\r\n    <input type='password' placeholder='password' value={password} onChange={(e) => setPassword(e.target.value)}></input> \r\n    <button type='submit'>Register</button>\r\n   </form>\r\n  )\r\n}\r\n\r\nexport default RegisterPage"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGvC,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMS,QAAQ,GAAG,MAAMC,CAAC,IAAK;IAC3BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAEnB,IAAI;MACH,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gCAAgC,EAAE;QAC7DC,MAAM,EAAE,MAAM;QACdC,IAAI,EAACC,IAAI,CAACC,SAAS,CAAC;UAACZ,QAAQ;UAAEE;QAAQ,CAAC,CAAC;QACzCW,OAAO,EAAC;UAAC,cAAc,EAAG;QAAkB;MAC9C,CAAC,CAAC;MACF,IAAGN,QAAQ,CAACO,EAAE,KAAK,KAAK,EAAE;QACxBC,KAAK,CAAC,qBAAqB,CAAC;MAC9B,CAAC,MAAM;QACLA,KAAK,CAAC,0BAA0B,CAAC;MACnC;MACA,MAAMC,IAAI,GAAI,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;MACnCC,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEH,IAAI,CAAC;IAC9B,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdF,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEC,KAAK,CAAC;IAC3C;EAED,CAAC;EAED,oBACEvB,OAAA;IAAMwB,SAAS,EAAC,UAAU;IAACC,QAAQ,EAAElB,QAAS;IAAAmB,QAAA,gBAC5C1B,OAAA;MAAA0B,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnB9B,OAAA;MAAO+B,IAAI,EAAC,MAAM;MAACC,WAAW,EAAC,SAAS;MAACC,KAAK,EAAE9B,QAAS;MAAC+B,QAAQ,EAAG1B,CAAC,IAAKJ,WAAW,CAACI,CAAC,CAAC2B,MAAM,CAACF,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAChH9B,OAAA;MAAO+B,IAAI,EAAC,UAAU;MAACC,WAAW,EAAC,UAAU;MAACC,KAAK,EAAE5B,QAAS;MAAC6B,QAAQ,EAAG1B,CAAC,IAAKF,WAAW,CAACE,CAAC,CAAC2B,MAAM,CAACF,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACrH9B,OAAA;MAAQ+B,IAAI,EAAC,QAAQ;MAAAL,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClC,CAAC;AAEV;AAAC5B,EAAA,CAlCQD,YAAY;AAAAmC,EAAA,GAAZnC,YAAY;AAoCrB,eAAeA,YAAY;AAAA,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}